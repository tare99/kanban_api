type Task {
    id: ID!
    title: String!
    description: String
    status: TaskStatus!
    priority: TaskPriority!
    version: Int
}

enum TaskStatus {
    TO_DO
    IN_PROGRESS
    DONE
}

enum TaskPriority {
    LOW
    MED
    HIGH
}

input CreateTaskInput {
    title: String!
    description: String
    status: TaskStatus
    priority: TaskPriority
}

input UpdateTaskInput {
    title: String
    description: String
    status: TaskStatus
    priority: TaskPriority
    version: Int
}

input PatchTaskInput {
    id: ID!
    patchJson: String!
}

type PageInfo {
    page: Int!
    size: Int!
    totalElements: Int!
    totalPages: Int!
}

type PagedTasks {
    content: [Task!]!
    pageInfo: PageInfo!
}

type Query {
    task(id: ID!): Task
    tasks(status: TaskStatus, page: Int = 0, size: Int = 20, sort: [String] = ["id"]): PagedTasks!
}

type Mutation {
    createTask(input: CreateTaskInput!): Task!
    updateTask(id: ID!, input: UpdateTaskInput!): Task!
    patchTask(input: PatchTaskInput!): Task!
    deleteTask(id: ID!): Boolean!
}
